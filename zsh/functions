mcd() {
    if [ ! -n "$1" ]; then
        echo "Enter a directory name"
    elif [ -d $1 ]; then
        echo "\`$1' already exists"
    else
        mkdir $1 && cd $1
    fi
}
colortest() {
    T='gYw'   # The test text
    echo -e "\n                 40m     41m     42m     43m     44m     45m     46m     47m";
    for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' '  36m' '1;36m' '  37m' '1;37m';
    do FG=${FGs// /}
        echo -en " $FGs \033[$FG  $T  "
        for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
        do echo -en "$EINS \033[$FG\033[$BG  $T \033[0m\033[$BG \033[0m";
        done
        echo;
    done
    echo
}

# search for a file in any and all subdirs and open it
function vv() {
    filename=$(fzf --preview "bat --style=numbers --color=always --line-range :500 {}")
    if [ "$filename" != "" ]; then
        vim "$filename"
    fi
}

# find "thing" inside quotes: fquote thing
function fquote {
    rg '['"'"'"'']'"$1"'['"'"'"'']'
}

if which fasd >/dev/null; then
    # install fasd hooks and basic aliases in the shell
    eval "$(fasd --init auto)"

    # if there is fzf available use it to search fasd results
    if which fzf >/dev/null; then

        alias v >/dev/null && unalias v
        alias vd >/dev/null && unalias vd
        alias z >/dev/null && unalias z

        # edit given file or search in recently used files
        function v {
            local file
            # if arg1 is a path to existing file then simply open it in the editor
            test -e "$1" && $EDITOR "$@" && return
            # else use fasd and fzf to search for recent files
            file="$(fasd -Rfl "$*" | fzf --preview "bat --style=numbers --color=always --line-range :500 {}")" && $EDITOR "${file}" || $EDITOR "$@"
        }

        # cd into the directory containing a recently used file
        function vd {
            local dir
            local file
            file="$(fasd -Rfl "$*" | fzf -1 -0 --no-sort +m)" && dir=$(dirname "$file") && cd "$dir"
        }

        # cd into given dir or search in recently used dirs
        function z {
            [ $# -eq 1 ] && test -d "$1" && cd "$1" && return
            local dir
            dir="$(fasd -Rdl "$*" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
        }
    fi
fi