# set tmux to use ZSH as default shell
set-option -g default-shell /bin/zsh

# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Ring the bell if any background window rang a bell
set -g bell-action any

# vi is good
setw -g mode-keys vi

# No escape time for vi mode
set -sg escape-time 0

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# mouse behavior
set -g mouse-utf8 on
set -g mouse on

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy V begin-selection
bind-key -t vi-copy C copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set-option -g assume-paste-time 0

# Set colors and styles
set -g status "on"
set -g status-utf8 "on"
set -g status-justify "left"
set -g status-style "bg=colour0,none"

set -g message-style "fg=colour7,bg=colour0"
set -g message-command-style "fg=colour7,bg=colour0"
set -g pane-border-style "fg=colour7"
set -g pane-active-border-style "fg=colour1"

set -g status-left "#[fg=colour193,bg=colour65,bold] #S #[fg=colour65,bg=colour235,nobold,nounderscore,noitalics]"
set -g status-left-style "none"
set -g status-left-length "100"
set -g status-right-style "none"
set -g status-right "#[fg=colour15,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour15] #(curl ipecho.net/plain;echo)  %I:%M #[fg=colour65,bg=colour15,nobold,nounderscore,noitalics]#[fg=colour193,bg=colour65,bold] #h "
set -g status-right-length "100"


setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour1,bg=colour235,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour7,bg=colour235,none"
setw -g window-status-format "#[fg=colour7,bg=colour235] #I  #W "
setw -g window-status-current-format "#[fg=colour235,bg=colour65,nobold,nounderscore,noitalics]#[fg=colour193,bg=colour65] #I  #W #[fg=colour65,bg=colour0,nobold,nounderscore,noitalics]"
